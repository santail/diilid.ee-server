// Generated by CoffeeScript 1.8.0
var Logentries, logentries, winston,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

winston = require('winston');

logentries = require('logentries');

Logentries = (function(_super) {
  __extends(Logentries, _super);

  function Logentries(_arg) {
    var level, token;
    token = _arg.token, level = _arg.level;
    Logentries.__super__.constructor.apply(this, arguments);
    this.name = 'logentries';
    this.level = level || 'info';
    this.logentries = new logentries.logger({
      token: token
    });
    this.logentries.level(this.level);
  }

  Logentries.prototype.log = function(level, msg, meta, callback) {
    var data;
    level = this.remapLevels(level);
    if (meta != null) {
      meta = JSON.stringify(meta);
      meta = meta === '{}' ? '' : " " + meta;
    }
    data = msg + meta;
    this.logentries.log(level, data);
    return callback(null, true);
  };

  Logentries.prototype.remapLevels = function(level) {
    if (level === 'warn') {
      return 'warning';
    }
    if (level === 'error') {
      return 'err';
    }
    return level;
  };

  return Logentries;

})(winston.Transport);

winston.transports.Logentries = Logentries;

module.exports = {
  Logentries: Logentries
};
